#include <stdio.h>
 
int main(void){
    int i, zeronum = 0, j = 0, k = 0; // i - счётчик для циклов, zeronum - количество подряд идущих нулей, j - размер массива на выходе, k - счётчик для массива на выходе
    int a[] = { 1, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 1 }; // Изначальный массив
    int n   = sizeof(a)/sizeof(a[0]); // считаем длину начального массива
    // printf("The length of source is %d\n", n);
	printf("Source: ");
	for (i = 0; i < n; i++) {
		printf("%d ",a[i]);
		if (i != n-1) { // Проверяем, не последнее ли это число в изначальном массиве
			if (a[i] !=0){
				j++; // Если число в исходном массиве не равно нулю, то прибавляем 1 к длине массива на выходе
			} else {
				zeronum++; // Если текущее число равно нулю, то прибавляем 1 к числу нулей 
				if (a[i+1] != 0) { // Проверяем, равно ли следующее число нулю или нет
					if (zeronum%2 == 0){
						j = j + 2; // Если число нулей чётное, то прибавляем к длине массива 2 и обнуляем счётчик
						zeronum = 0;
					} else {
						j = j + 1; // Если нечётное, то прибавляем к длине массива 1 и обнуляем счётчик
						zeronum = 0;
					}
				} 
			}
		} else {
			if (a[i] != 0){ // Если последнее число не равно нулю, то прибавляем ещё один
				j++;
			} else {
				zeronum++; // А если последнее число - ноль, то проверяем, сколько натикало в счётчике
				if (zeronum%2 == 0){
					j = j + 2; // Если число нулей чётное, то прибавляем к длине массива 2 и обнуляем счётчик
					zeronum = 0;
				} else {
					j = j + 1; // Если нечётное, то прибавляем к длине массива 1 и обнуляем счётчик
					zeronum = 0;
				}
			}
		}
	}
	
	// printf("The length of out is %d\n", j);
	int *b = new int [j]; // Выделяем память новому массиву

	if (b == NULL) { // Проверяем, выделилась ли память
		printf ("No free memory!\n");
		return 0;
	}
	
	printf("\nOutput: ");
	for (i = 0; i < n; i++) { // Снова проходимся по изначальному массиву, но уже заполняем новый массив, длину которого узнали в предыдущем цикле
		if (i != n-1) {
			if (a[i] !=0){ // Всё аналогично первому циклу, но ещё ведём счётчик k для записи в новый массив
				b[k] = a[i];
				k++;
			} else {
				zeronum++;
				if (a[i+1] != 0) { // Проверяем, равно ли следующее число нулю или нет
					if (zeronum%2 == 0){
						b[k] = 0;
						b[k+1] = 0;
						k = k + 2; // Если число нулей чётное, то прибавляем к длине массива 2 и обнуляем счётчик
						zeronum = 0;
					} else {
						b[k] = 0;
						k++; // Если нечётное, то прибавляем к длине массива 1 и обнуляем счётчик
						zeronum = 0;
					}
				} 
			}
		} else {
			if (a[i] != 0){ // Если последнее число не равно нулю, то прибавляем ещё один
				b[k] = a[i];
				k++;
			} else {
				zeronum++; // А если последнее число - ноль, то проверяем, сколько натикало в счётчике
				if (zeronum%2 == 0){
						b[k] = 0;
						b[k+1] = 0;
						k = k + 2; // Если число нулей чётное, то прибавляем к длине массива 2 и обнуляем счётчик
						zeronum = 0;
					} else {
						b[k] = 0;
						k++; // Если нечётное, то прибавляем к длине массива 1 и обнуляем счётчик
						zeronum = 0;
				}
			}
		}
	}

	for (i = 0; i < j; i++){
		printf("%d ", b[i]);
	}

	delete[] b; // Освобождаем память
}