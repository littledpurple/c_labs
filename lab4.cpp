#define _CRT_SECURE_NO_WARNINGS // не показываем варнинги о небезопасности fopen
#include <stdio.h>
#include <cstdlib>

int main()
{
	int i=0,length=0,currow=0,lonrow=0; // создаем переменные, i - просто для итерации, length - длина всего файла, currow - длина текущей строки, lonrow - длина самой длинной строки
	char c; // символ для печати в последнем пункте
	char *str = new char [1]; // выделяем память для строки
	FILE *file1; // file1 - файл
	file1=fopen("text.txt","r"); // открываем файл
	while((c=fgetc(file1))!=EOF) { // ищем длину самой длинной строки в файле
		length++; // добавляем к длине файла 1
		currow++; // прибавляем к длине строки 1
		if (c=='\n'){ // если это символ переноса строки
			length=length+1; // это я не могу объяснить, иначе работает неправильно и переносит каретку меньше на столько символов, сколько строк в файле - 1
			if(currow>lonrow) { // если текущая строка вышла больше, чем самая большая, то делаем её самой большой
				lonrow=currow;
			}
			currow=0; // обнуляем длину текущей строки
		}
	}

	fseek(file1, -(length), SEEK_CUR); // перемещаем курсор в начало файла
	currow=0; // обнуляем длину текущей строки для вывода файла

	char *underline = new char [lonrow]; // выделяем память для строки с подчёркиванием

	while((c=fgetc(file1))!=EOF) { // теперь печатаем файл, а когда видим переход на следующую строку, печатаем строку с подчёркиванием
		printf("%c",c); // печатаем символ в любом случае
		if(c=='\n') { // если это был символ переноса строки, то печатаем строку с подчёркиванием
			for (i = 0; i < currow; i++) {
				printf("%c",underline[i]);
			}
			printf("\n");
			currow=0;
		} else { // если был не символ переноса строки, то
			if((c>='A') && (c<='Z')) { // смотрим, большая ли была буква
				underline[currow]='-'; // если да, то делаем подчёркивание
			} else {
				underline[currow]=' '; // если нет, то ставим пробел в строке с подчёркиванием
			}
			currow++; // просто добавляем 1 к количеству символов строки
		}
	}
	printf("\n"); // в конце выводим перенос строки и строку с подчёркиванием, потому что в последней строке нет символа перевода строки, а есть только EOF (End of file)
	for (i = 0; i < currow; i++) {
				printf("%c",underline[i]);
			}
	free(underline); // очищаем память
	fclose(file1); // закрываем файл
}